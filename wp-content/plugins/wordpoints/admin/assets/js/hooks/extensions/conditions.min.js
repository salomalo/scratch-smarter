!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){var d=wp.wordpoints.hooks;d.model.Condition=a("./conditions/models/condition.js"),d.model.Conditions=a("./conditions/models/conditions.js"),d.model.ConditionGroup=a("./conditions/models/condition-group.js"),d.model.ConditionGroups=a("./conditions/models/condition-groups.js"),d.model.ConditionType=a("./conditions/models/condition-type.js"),d.model.ConditionTypes=a("./conditions/models/condition-types.js"),d.view.Condition=a("./conditions/views/condition.js"),d.view.ConditionGroup=a("./conditions/views/condition-group.js"),d.view.ConditionSelector=a("./conditions/views/condition-selector.js"),d.view.ConditionGroups=a("./conditions/views/condition-groups.js"),d.extension.Conditions=a("./conditions/controllers/extension.js"),d.extension.Conditions.Condition=a("./conditions/controllers/condition.js");var e=new d.extension.Conditions,f=a("./conditions/controllers/conditions/equals.js");e.registerController("decimal_number","equals",f),e.registerController("entity","equals",f),e.registerController("entity_array","equals",f),e.registerController("entity_array","contains",a("./conditions/controllers/conditions/entity-array-contains.js")),e.registerController("integer","equals",f),e.registerController("text","equals",f),d.Extensions.add(e)},{"./conditions/controllers/condition.js":2,"./conditions/controllers/conditions/entity-array-contains.js":3,"./conditions/controllers/conditions/equals.js":4,"./conditions/controllers/extension.js":5,"./conditions/models/condition-group.js":6,"./conditions/models/condition-groups.js":7,"./conditions/models/condition-type.js":8,"./conditions/models/condition-types.js":9,"./conditions/models/condition.js":10,"./conditions/models/conditions.js":11,"./conditions/views/condition-group.js":12,"./conditions/views/condition-groups.js":13,"./conditions/views/condition-selector.js":14,"./conditions/views/condition.js":15}],2:[function(a,b,c){var d,e=wp.wordpoints.hooks.Fields;d=Backbone.Model.extend({defaults:{slug:"",fields:[]},idAttribute:"slug",renderSettings:function(a,b){var c="";return _.each(this.get("fields"),function(d,f){var g=_.clone(b);g.push(f),c+=e.create(g,a.model.attributes.settings[f],d)},this),c},validateSettings:function(){}}),b.exports=d},{}],3:[function(a,b,c){var d,e=wp.wordpoints.hooks.extension.Conditions.Condition,f=wp.wordpoints.hooks.model.ConditionGroups,g=wp.wordpoints.hooks.view.ConditionGroups,h=wp.wordpoints.hooks.Extensions,i=wp.wordpoints.hooks.model.Args,j=wp.wordpoints.hooks.Args;d=e.extend({defaults:{slug:"entity_array_contains"},renderSettings:function(a,b){var c=this.constructor.__super__.renderSettings.apply(this,[a,b]);a.$settings.append(c);var d=j.getEntity(a.model.getArg().get("entity_slug"));a.model.subGroups=new f(null,{args:new i([d]),hierarchy:a.model.getFullHierarchy().concat(["_conditions",a.model.id,"settings","conditions"]),reaction:a.reaction.model,_conditions:a.model.get("settings").conditions});var e=new g({collection:a.model.subGroups,reaction:a.reaction});return a.$settings.append(e.render().$el),""},validateSettings:function(a,b,c){h.get("conditions").validateConditions([a.subGroups],b.conditions,c)}}),b.exports=d},{}],4:[function(a,b,c){var d,e=wp.wordpoints.hooks.extension.Conditions.Condition;d=e.extend({defaults:{slug:"equals"},renderSettings:function(a,b){var c=this.get("fields"),d=a.model.getArg();if(d){var e=d.get("_type");switch(c=_.extend({},c),e){case"attr":c.value=_.extend({},c.value,{type:d.get("data_type")});case"entity":var f=d.get("values");f&&(c.value=_.extend({},c.value,{type:"select",options:f}))}this.set("fields",c)}return this.constructor.__super__.renderSettings.apply(this,[a,b])}}),b.exports=d},{}],5:[function(a,b,c){var d,e=wp.wordpoints.hooks.controller.Extension,f=wp.wordpoints.hooks.model.ConditionGroups,g=wp.wordpoints.hooks.view.ConditionGroups,h=wp.wordpoints.hooks.util.getDeep,i=wp.wordpoints.hooks.view.data;d=e.extend({defaults:{slug:"conditions"},initialize:function(){this.argFilters=[this.onlyEnumerableEntities],this.dataType=Backbone.Model.extend({idAttribute:"slug"}),this.controllers=new Backbone.Collection([],{comparator:"slug",model:this.dataType})},initReaction:function(a){a.conditions={},a.model.conditions={};var b=a.model.get("conditions");b||(b={});var c=_.keys(i.event_action_types[a.model.get("event")]);if(c){c=_.intersection(a.Reactor.get("action_types"),c),_.each(c,function(c){var d=b[c];d||(d=[]),a.model.conditions[c]=new f(null,{hierarchy:[c],reaction:a.model,_conditions:d})},this);var d=!1;this.listenTo(a,"render:fields",function(b,c){var e=a.conditions[c];if(e||(e=a.conditions[c]=new g({collection:a.model.conditions[c],reaction:a})),d){var f=a.model.conditions[c],h=a.model.get("conditions");h||(h={}),f.set(f.mapConditionGroups(h[c]||[]),{parse:!0}),e.render()}else b.append(e.render().$el),d=!0})}},getDataTypeFromArg:function(a){var b=a.get("_type");switch(b){case"attr":return a.get("data_type");case"array":return"entity_array";default:return b}},validateReaction:function(a,b,c,d){return d.rawAtts.conditions?void this.validateConditions(a.conditions,b.conditions,c):(delete b.conditions,void delete a.attributes.conditions)},validateConditions:function(a,b,c){_.each(a,function(a){a.each(function(d){d.get("conditions").each(function(d){var e=[],f=d.getHierarchy().concat(["_conditions",d.id]);if(1===a.hierarchy.length&&f.unshift(a.hierarchy[0]),d.validate(h(b,f),{},e),!_.isEmpty(e)){f.unshift("conditions"),f.push("settings");for(var g=0;g<e.length;g++)e[g].field=f.concat(_.isArray(e[g].field)?e[g].field:[e[g].field]),c.push(e[g])}})})})},getType:function(a,b){return"undefined"!=typeof this.data.conditions[a]&&("undefined"!=typeof this.data.conditions[a][b]&&_.clone(this.data.conditions[a][b]))},getByDataType:function(a){return _.clone(this.data.conditions[a])},getController:function(a,b){var c,e=this.controllers.get(a);e&&(c=e.get("controllers")[b]),c||(c=d.Condition);var f=this.getType(a,b);return f||(f={slug:b}),new c(f)},registerController:function(a,b,c){var d=this.controllers.get(a);d||(d=new this.dataType({slug:a,controllers:{}}),this.controllers.add(d)),d.get("controllers")[b]=c},onlyEnumerableEntities:function(a,b,c,d){return"entity"===b&&_.isEmpty(a.get("values"))&&delete d.equals,!0}}),b.exports=d},{}],6:[function(a,b,c){var d,e=wp.wordpoints.hooks.model.Conditions;d=Backbone.Model.extend({defaults:function(){return{id:"",hierarchy:[],conditions:new e,groups:null,reaction:null}},initialize:function(a){this.listenTo(this.attributes.conditions,"all",this.trigger),a._conditions&&this.reset(a._conditions)},reset:function(a,b){b=b||{},b.group=this;var c=this.get("conditions");return this.setIds(a,0),c.reset.call(c,a,b)},setConditions:function(a,b){b=b||{},b.group=this;var c=this.get("conditions");return this.setIds(a,0),c.set.call(c,a,b)},add:function(a,b){b=b||{},b.group=this;var c=this.get("conditions");return this.setIds(a,this.getNextId()),c.add.call(c,a,b)},getNextId:function(){var a=this.get("conditions");return a.length?parseInt(a.sort().last().get("id"),10)+1:0},setIds:function(a,b){a&&_.each(_.isArray(a)?a:[a],function(a,c){0!==b?a.id=b++:a.id=c,a instanceof Backbone.Model&&(a.group=this)},this)},sync:function(a,b,c){c.error({message:"Fetching and saving groups of hook conditions is not supported."})}}),b.exports=d},{}],7:[function(a,b,c){var d,e=wp.wordpoints.hooks.model.ConditionGroup,f=wp.wordpoints.hooks.Args;d=Backbone.Collection.extend({model:e,hierarchy:[],initialize:function(a,b){b.args&&(this.args=b.args),b.hierarchy&&(this.hierarchy=b.hierarchy),b.reaction&&(this.reaction=b.reaction),b._conditions&&this.mapConditions(b._conditions)},mapConditionGroups:function(a,b,c){return c=c||[],b=b||[],_.each(a,function(a,d){"_conditions"===d?b.push({id:this.getIdFromHierarchy(c),hierarchy:_.clone(c),groups:this,_conditions:_.toArray(a)}):(c.push(d),this.mapConditionGroups(a,b,c),c.pop())},this),b},mapConditions:function(a,b){var c=this.mapConditionGroups(a,[],b);this.reset(c)},getIdFromHierarchy:function(a){return a.join(".")},getArgs:function(){var a=this.args;return a||(a=f.getEventArgs(this.reaction.get("event"))),a},parse:function(a,b){if(!b.merge)return a;for(var c,d=_.isArray(a)?a:[a],e=0;e<d.length;e++)c=this.get(d[e].id),c&&(c.setConditions(d[e]._conditions,b),d[e].conditions=c.get("conditions"));return a}}),b.exports=d},{}],8:[function(a,b,c){var d,e=wp.wordpoints.hooks.model.Base;d=e.extend({idAttribute:"slug"}),b.exports=d},{}],9:[function(a,b,c){var d,e=wp.wordpoints.hooks.model.ConditionType;d=Backbone.Collection.extend({model:e}),b.exports=d},{}],10:[function(a,b,c){var d,e=wp.wordpoints.hooks.model.Base,f=wp.wordpoints.hooks.Args,g=wp.wordpoints.hooks.Extensions,h=wp.wordpoints.hooks.Fields;d=e.extend({defaults:{type:"",settings:[]},initialize:function(a,b){b.group&&(this.group=b.group)},validate:function(a,b,c){c=c||[];var d=this.getType();if(d){var e=d.fields;h.validate(e,a.settings,c);var f=this.getController();return f&&f.validateSettings(this,a.settings,c),c}},getController:function(){var a=this.getArg();if(!a)return!1;var b=g.get("conditions");return b.getController(b.getDataTypeFromArg(a),this.get("type"))},getType:function(){var a=this.getArg();if(!a)return!1;var b=g.get("conditions");return b.getType(b.getDataTypeFromArg(a),this.get("type"))},getArg:function(){if(!this.arg){var a=f.getArgsFromHierarchy(this.getHierarchy(),this.reaction.get("event"));a&&(this.arg=a[a.length-1])}return this.arg},getHierarchy:function(){return this.group.get("hierarchy")},getFullHierarchy:function(){return this.group.get("groups").hierarchy.concat(this.getHierarchy())},isNew:function(){return"undefined"==typeof this.reaction.get(["conditions"].concat(this.getFullHierarchy()).concat(["_conditions",this.id]))},sync:function(a,b,c){c.error({message:"Fetching and saving hook conditions is not supported."})}}),b.exports=d},{}],11:[function(a,b,c){var d,e=wp.wordpoints.hooks.model.Condition;d=Backbone.Collection.extend({model:e,comparator:"id",sync:function(a,b,c){c.error({message:"Fetching and saving hook conditions is not supported."})}}),b.exports=d},{}],12:[function(a,b,c){var d,e=wp.wordpoints.hooks.view.Base,f=wp.wordpoints.hooks.view.Condition,g=wp.wordpoints.hooks.Args,h=Backbone.$,i=wp.wordpoints.hooks.template;d=e.extend({className:"condition-group",template:i("hook-reaction-condition-group"),initialize:function(){this.listenTo(this.model,"add",this.addOne),this.listenTo(this.model,"reset",this.render),this.listenTo(this.model,"remove",this.maybeHide),this.model.on("add",this.reaction.lockOpen,this.reaction),this.model.on("remove",this.reaction.lockOpen,this.reaction),this.model.on("reset",this.reaction.lockOpen,this.reaction)},render:function(){return this.$el.html(this.template()),this.maybeHide(),this.$(".condition-group-title").text(g.buildHierarchyHumanId(g.getArgsFromHierarchy(this.model.get("hierarchy"),this.reaction.model.get("event")))),this.addAll(),this},addOne:function(a){a.reaction=this.reaction.model;var b=new f({el:h('<div class="condition"></div>'),model:a,reaction:this.reaction}),c=b.render().$el;this.$el.append(c).show(),a.isNew()&&c.find(":input:visible:eq( 1 )").focus(),this.listenTo(a,"destroy",function(){this.model.get("conditions").remove(a.id)})},addAll:function(){this.model.get("conditions").each(this.addOne,this)},maybeHide:function(){0===this.model.get("conditions").length&&this.$el.hide()}}),b.exports=d},{}],13:[function(a,b,c){var d,e=wp.wordpoints.hooks.view.Base,f=wp.wordpoints.hooks.view.ConditionGroup,g=wp.wordpoints.hooks.view.ArgHierarchySelector,h=wp.wordpoints.hooks.view.ConditionSelector,i=wp.wordpoints.hooks.Extensions,j=wp.wordpoints.hooks.Args,k=wp.wordpoints.hooks.template,l=wp.wordpoints.$cache;d=e.extend({namespace:"condition-groups",className:"conditions",template:k("hook-condition-groups"),events:{"click > .conditions-title .add-new":"showArgSelector","click > .add-condition-form .confirm-add-new":"maybeAddNew","click > .add-condition-form .cancel-add-new":"cancelAddNew"},initialize:function(){this.Conditions=i.get("conditions"),this.listenTo(this.collection,"add",this.addOne),this.listenTo(this.collection,"reset",this.render),this.listenTo(this.reaction,"cancel",this.cancelAddNew),this.collection.on("update",this.reaction.lockOpen,this.reaction),this.collection.on("reset",this.reaction.lockOpen,this.reaction)},render:function(){return this.$el.html(this.template()),this.$c=l.call(this,this.$),this.addAll(),this.trigger("render",this),this.ArgSelector&&(this.$("> .add-condition-form .arg-selectors").replaceWith(this.ArgSelector.$el),this.$("> .add-condition-form .condition-selector").replaceWith(this.ConditionSelector.$el),this.ArgSelector.delegateEvents(),this.ConditionSelector.delegateEvents(),this.ConditionSelector.triggerChange()),this},addAll:function(){this.collection.each(this.addOne,this)},addOne:function(a){var b=new f({model:a,reaction:this.reaction});this.$c("> .condition-groups").append(b.render().$el)},showArgSelector:function(){if(this.$c("> .conditions-title .add-new").attr("disabled",!0),"undefined"==typeof this.ArgSelector){var a=this.collection.getArgs(),b=this.Conditions,c=b.argFilters,d="settings,conditions"===this.collection.hierarchy.slice(-2).toString(),e=function(a){for(var e=b.getDataTypeFromArg(a),f=b.getByDataType(e),g=0;g<c.length;g++)if(!c[g](a,e,d,f))return!1;return!_.isEmpty(f)},f=j.getHierarchiesMatching({top:a.models,end:e});_.isEmpty(f)?this.$c("> .add-condition-form .no-conditions").show():(this.ArgSelector=new g({hierarchies:f,el:this.$("> .add-condition-form .arg-selectors")}),this.listenTo(this.ArgSelector,"change",this.maybeShowConditionSelector),this.ArgSelector.render(),this.ArgSelector.$select.change())}this.$c("> .add-condition-form").slideDown()},getArgType:function(a){var b;if(a&&a.get)return b=this.Conditions.getDataTypeFromArg(a),"relationship"===b&&(b=this.getArgType(a.getChild(a.get("secondary")))),b},maybeShowConditionSelector:function(a,b){var c=this.getArgType(b);if(!c)return void(this.$conditionSelector&&this.$conditionSelector.hide());var d=this.Conditions.getByDataType(c);this.ConditionSelector||(this.ConditionSelector=new h({el:this.$("> .add-condition-form .condition-selector")}),this.listenTo(this.ConditionSelector,"change",this.conditionSelectionChange),this.$conditionSelector=this.ConditionSelector.$el),this.ConditionSelector.collection.reset(_.toArray(d)),this.$conditionSelector.show().find("select").change()},cancelAddNew:function(){this.$c("> .add-condition-form").slideUp(),this.$c("> .conditions-title .add-new").attr("disabled",!1)},conditionSelectionChange:function(a,b){this.$c("> .add-condition-form .confirm-add-new").attr("disabled",!b)},maybeAddNew:function(){var a=this.ConditionSelector.getSelected();if(a){var b=this.ArgSelector.getHierarchy(),c=this.collection.getIdFromHierarchy(b),d=this.collection.get(c);d||(d=this.collection.add({id:c,hierarchy:b,groups:this.collection})),d.add({type:a}),wp.a11y.speak(this.Conditions.data.l10n.added_condition),this.$c("> .add-condition-form").hide(),this.$c("> .conditions-title .add-new").attr("disabled",!1)}}}),b.exports=d},{}],14:[function(a,b,c){var d,e=wp.wordpoints.hooks.view.Base,f=wp.wordpoints.hooks.model.ConditionTypes,g=wp.wordpoints.hooks.template;d=e.extend({namespace:"condition-selector",template:g("hook-condition-selector"),optionTemplate:g("hook-arg-option"),events:{"change select":"triggerChange"},initialize:function(a){this.label=a.label,this.collection||(this.collection=new f({comparator:"title"})),this.listenTo(this.collection,"update",this.render),this.listenTo(this.collection,"reset",this.render)},render:function(){return this.$el.html(this.template({label:this.label,name:this.cid+"_condition_selector"})),this.$select=this.$("select"),this.collection.each(function(a){this.$select.append(this.optionTemplate(a.attributes))},this),this.trigger("render",this),this},triggerChange:function(a){this.trigger("change",this,this.getSelected(),a)},getSelected:function(){return this.$select.val()}}),b.exports=d},{}],15:[function(a,b,c){var d,e=wp.wordpoints.hooks.view.Base,f=wp.wordpoints.hooks.template,g=wp.wordpoints.hooks.Extensions,h=wp.wordpoints.hooks.Fields;d=e.extend({namespace:"condition",className:"wordpoints-hook-condition",template:f("hook-reaction-condition"),events:{"click .delete":"destroy"},initialize:function(){this.listenTo(this.model,"change",this.render),this.listenTo(this.model,"destroy",this.remove),this.listenTo(this.model,"invalid",this.model.reaction.showError),this.extension=g.get("conditions")},render:function(){return this.$el.html(this.template()),this.$title=this.$(".condition-title"),this.$settings=this.$(".condition-settings"),this.renderTitle(),this.renderSettings(),this.trigger("render",this),this},renderTitle:function(){var a=this.model.getType();a&&this.$title.text(a.title),this.trigger("render:title",this)},renderSettings:function(){var a=this.model.getType(),b="",c=_.clone(this.model.getFullHierarchy());c.unshift("conditions"),c.push("_conditions",this.model.get("id"),"settings");var d=_.clone(c);if(d.pop(),d.push("type"),b+=h.create(d,this.model.get("type"),{type:"hidden"}),a){var e=this.extension.getController(a.data_type,a.slug);e&&(b+=e.renderSettings(this,c))}this.$settings.append(b),this.trigger("render:settings",this)},destroy:function(){wp.a11y.speak(this.extension.data.l10n.deleted_condition),this.model.destroy()}}),b.exports=d},{}]},{},[1]);